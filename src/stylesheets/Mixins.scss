// ---------- BUTTON MIXINS: loginButton, crudButton ---------- //
@mixin loginButton {
  // background: aquamarine;
  padding: 0 1em;

  // Home: Login Button
  .login-button {
    width: 100%;
    background-color: $button-background;
    // background-color: dodgerblue;
    color: $button-text;
    border: none;
    font-family: $button-font;
    font-size: $font-size-login-button;
    font-weight: bold;
    border-radius: 3px;
    padding: 15px 45%;

    // Home: Login Button (Hover)
    &:hover {
      background-color: $button-hover;
    }
  }

  .toggle-login-container {
    padding-top: 1em;
  }

  // Home: Admin Login
  .toggle-login {
    padding-top: 1em;
    display: block;
    text-decoration: none;
    color: black;
    font-weight: bold;
  }
}

// Button styling applied to editButton (in readOnly mode), editMode, updateButton and cancelButton when selected
@mixin crudButton() {
  // BUTTON: Button background colour
  background: $button-background;

  // BUTTON: Inner text colour (when selected)
  color: $button-text;

  // BUTTON: Box outline colour
  border: 1px solid $button-background;

  // Button: Rounded corners
  border-radius: 3px;

  // BUTTON: Text font-family
  font-family: $main-body-font;

  // BUTTON: Text font size
  font-size: $font-size-crud-button;

  // BUTTON: Sizing/decoration
  box-sizing: border-box;
  text-decoration: none;
  
  // BUTTON: Padding between button text and button border
  padding: 1em 4em;

  // BUTTON: Spacing between different buttons
  margin: 10px;
  min-width: 75px;
  
  // BUTTON: Change background color on hover
  &:hover {
    background-color: $button-hover;
  }
}

// ---------- FORM MIXINS: userTabCard, formContainer, formInputAndSelect, formClass=readMode and formClass=editMode ---------- //
// FORM STYLING: Applicable to User Profile in main <body> container
@mixin userTabCard() {
  display: flex;
  justify-content: space-evenly;
  vertical-align: middle;
  padding: 0 30px;
  flex-wrap: wrap-reverse;
  font-size: $main-body-font;

  .user-avatar {
    object-fit: cover;
    width: 100%;
    max-width: 200px;

    img {
      border-radius: 100%;
    }
  }

  .user-info {
    text-align: left;
  }

  @media only screen and (max-width: 600px) {
    justify-content: center;
  }
}

// FORM STYLING: Applicable to Organisation, Site and Service <div className="org-form"> container for <form>
@mixin formContainer() {
  // Make each form a block element
  display: block;
  width: 100%;
  // Add padding to the left, right and bottom
  padding: 0 50px 50px 50px;
  // Fit to border-box sizing, including padding
  box-sizing: border-box;
}

// FORM STYLING: Applicable to elements within <form> in both readMode and editMode; <form id="form" className={this.state.formClass} data-org-form >
@mixin formInputAndSelect() {
  // Align form < labels > to left instead of centre
  text-align: left;

  // Set font for all <form> elements except <select>
  font-family: $main-body-font;
  // font-family: 'Arial';
  // Set form <label> styling (font-size)

  label {
    @include formFontSize();
    // Font styling for form <labels>
    font-weight: bold;
    // color: #4D13AF;
  }
  
  // Set form <input> styling
  input {
    @include formFontSize();
    // Make input field fill entire <form> body
    width: 100%;
    font-family: $main-body-font;
    &::placeholder {
      // Font size for placeholder text (existing data)
      font-size: $font-size-form;
      font-family: $main-body-font;
    }
    // Removes border box highlighting when selected
    &:focus {
      outline: none;
    }
  }
  
  // Styling for Yes/No dropdown menus
  select {
    @include formFontSize();
    // Removes background colour shadow at 100%
    background: 100%;
    // To set dropdown box size to full width of container
    width: 100%;
    // Remove inbuilt border box for dropdown
    font-family: $main-body-font;
    // To change the font colour of dropdown options
    // color: aquamarine;
    // To change the background of <select> dropdowns
    // background: dodgerblue;

    // Add padding between <label> and <input>
    // padding-top: 0.5rem;
    // padding-bottom: 0.5rem;

    &:focus {
      // Removes border box highlighting when selected
      outline: none;

      // In Edit Mode, dropbox box outline
      border-color: none;
    }
  }
}

// FORM STYLING @readMode: Applicable to elements within <form> in readMode and editMode; <form id="form" className={this.state.formClass} data-org-form >, set to readMode by default
@mixin readMode() {
  /* Disable default input border box when point events triggered */
  pointer-events: none;

  label {
    display: block;
    color: $form-label-read;
    // margin-top: 0.7rem;
    background: rgba(110,201,204,0.5);
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    padding-left: 0.5em;
  }

  // Styling for form <inputs> in readMode
  input {
    /* Most modern browsers support this now. */
    // Remove inbuilt border box styling in form <input>
    border: none;
    // Add padding between <label> and <input>
    padding-top: 0.7rem;
    padding-bottom: 0.7rem;
    &::placeholder {
      // FONT: Font colour of placeholder text (existing data) in readOnly mode
      color: $form-input-placeholder-read;
    }
  }
  // Styling for Yes/No dropdown menus
  select {
    /*Removing the drop down arrow*/
    /* for Firefox */
    -moz-appearance: none;
    /* for Chrome */
    -webkit-appearance: none;
    /* For IE10 */
    &::-ms-expand {
      display: none;
    }
    padding-left: 10px;
    height: 35px;
    margin-top: 0.7rem;
    margin-bottom: 0.7rem;
  }

  // Hide update button when Edit mode is not selected, { state } is set to readMode by default
  button {
    visibility: hidden;
    margin: 0.5rem;
  }
}

// FORM STYLING @editMode: Applicable to elements within <form> in editMode; <form id="form" className={this.state.formClass} data-org-form >, set to readMode by default (formClass changes when Edit button is clicked)
@mixin editMode() {
  label {
    // Font colour for form <labels>
    color: $form-label-edit;
    padding-top: 10px;
    display: block;
  }

  // Font style for form inputs - actual 
  input {
    @include formFontSize();
    // Background of input box area
    // background: lightblue;
    // Removes inbuilt input border box
    border: none;
    // Add padding between <label> and <input>
    padding-top: 5px;
    padding-bottom: 10px;
    // Adds border along button of input box
    border-bottom: 1.5px solid $form-edit-outline;
    // Adds padding between input text & border box
    
    /* Most modern browsers support this now. */
    // Font style for form inputs - placeholder 
    &::placeholder {
      // FONT: Font colour of placeholder text (existing data) in editMode
      color: black;
    }

    // Removes border highlighting when selected
    &:focus {
      outline: none;
    }
  }
  // Styling for Yes/No dropdown menus
  select {
    color: black;
    border: 1.5px solid #6EC9CC;
    padding-left: 10px;
    height: 35px;
    margin-top: 0.7rem;
    margin-bottom: 0.7rem;
  }

  // Button styling for Update button in editMode
  button {
    @include crudButton();
  }
}